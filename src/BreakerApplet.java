/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src;

import src.bricks.Brick;
import src.bricks.BrickList;

import java.applet.Applet;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionEvent;

/**
 *
 * @author Quinn
 */
public class BreakerApplet extends java.applet.Applet
        implements java.awt.event.ActionListener
{

    private static final int PAUSE_TIME = 20;
    private javax.swing.Timer moveTimer = new javax.swing.Timer(34, this);
    private Panel p;
    private BrickList brickList;
    private PFigureList figList;
    private Ball ball = new Ball(200,200,0,0,Color.BLUE,10,p);

    public void init()
    {
        ((Window) this.getParent().getParent()).setLocation(960, 40);
        ((Window) this.getParent().getParent()).setSize(875, 950);

        try
        {
            java.awt.EventQueue.invokeAndWait(new Runnable()
            {
                public void run()
                {
                    initComponents();
                    moveTimer.start();
//                    while()
//                    {
//                        brickList.collisionCheck(brickList);
//                        
//                    }
                }
            });
        } catch (Exception ex)
        {
            //ex.printStackTrace();
        }
        setLayout(new BorderLayout());
        brickList = new BrickList();
        p = new Panel();
        add(p);
        p.setBackground(Color.DARK_GRAY);

        for (int i = 1; i <= 15; i++)
        {
            for (int j = 1; j <= 10; j++)
            {
                brickList.add(new Brick(i * 50, j * 40, 50, 20, 0, p));
            }
        }
    }

    private boolean gameIsOver()
    {
        //Out of bounds?
        
        return false;
    }

    public void paint(Graphics g)
    {
        brickList.draw();
        ball.draw();
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();

        setStub(null);
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, java.awt.Color.black));
        jPanel1.setMaximumSize(new java.awt.Dimension(4000, 220));
        jPanel1.setMinimumSize(new java.awt.Dimension(4000, 220));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(220, 500));
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentResized(java.awt.event.ComponentEvent evt)
            {
                jPanel1ComponentResized(evt);
            }
        });
        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1ComponentResized(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_jPanel1ComponentResized
    {//GEN-HEADEREND:event_jPanel1ComponentResized
        jPanel1.setSize(875, 950);
    }//GEN-LAST:event_jPanel1ComponentResized

    @Override
    public void actionPerformed(ActionEvent ae)
    {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
